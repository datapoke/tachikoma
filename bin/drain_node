#!/usr/bin/env perl
use strict;
use warnings;
use Tachikoma::EventFrameworks::Select;
use Tachikoma::Nodes::Router;
use Tachikoma::Nodes::STDIO;
use Tachikoma::Nodes::Socket qw( TK_SYNC );
use Getopt::Long qw( GetOptions );

use version; our $VERSION = qv('v2.0.929');

my $home            = ( getpwuid $< )[7];
my @default_configs = (
    "$home/.tachikoma/etc/tachikoma.conf",
    '/usr/local/etc/tachikoma.conf',
);
my $config_file = undef;
my $host        = 'localhost';
my $port        = 4230;
my $use_SSL     = undef;
my $debug       = undef;
my $help        = undef;

my $r = GetOptions(
    'config=s' => \$config_file,
    'host=s'   => \$host,
    'port=i'   => \$port,
    'use-ssl'  => \$use_SSL,
    'debug:i'  => \$debug,
    'help'     => \$help,
);
my $node_name = $ARGV[0];
$debug = 1 if ( defined $debug and not $debug );

usage() if ( $help or not $r or ( not $port and not $node_name ) );
my $config = Tachikoma->configuration;
$config->load_config_file( $config_file ? $config_file : @default_configs );
Tachikoma->event_framework( Tachikoma::EventFrameworks::Select->new );

my $router = Tachikoma::Nodes::Router->new;
my $tachikoma =
    Tachikoma::Nodes::Socket->inet_client( $host, $port, TK_SYNC, $use_SSL );
$tachikoma->name('_socket');
my $stdout = Tachikoma::Nodes::STDIO->filehandle( *STDOUT, TK_SYNC );
$stdout->on_EOF('ignore');
$stdout->sink($router);
$tachikoma->debug_state($debug);
$tachikoma->on_EOF('die');
$tachikoma->sink($stdout);

if ($node_name) {
    my $command = $tachikoma->command( 'connect_node', $node_name );
    $tachikoma->fill($command);
}
$router->name('_router');
$router->debug_state($debug);
$router->drain;

sub usage {
    print "Usage:\n"
        . "drain_node [ --config=<path> ]\n"
        . "           [ --host=<host>   ]\n"
        . "           [ --port=<port>   ]\n"
        . "           [ --use-ssl       ]\n"
        . "           [ --debug         ]\n"
        . "           [ --help          ]\n"
        . "           [ <node name>     ]\n";
    exit 1;
}
