#!/usr/bin/env perl
# ----------------------------------------------------------------------
# gen_server_key
# ----------------------------------------------------------------------
#
# $Id: gen_server_key 35698 2018-10-28 02:54:48Z chris $
#
use strict;
use warnings;
use Crypt::OpenSSL::RSA;
use Sys::Hostname;

umask 0077 or die "couldn't umask: $!";

my $home     = ( getpwuid $< )[7];
my $hostname = hostname();
my $id       = "tachikoma\@$hostname";
my $id_file  = $ARGV[0] || "$home/.tachikoma/id";
my $bits     = $ARGV[1] || 4096;
my $force    = $ARGV[2];
if ( -e $id_file ) {
    if ( not $force ) {
        die "$id_file exists!";
    }
    elsif ( $force eq 'ignore' ) {
        exit 0;
    }
}
my $rsa         = generate_key Crypt::OpenSSL::RSA($bits);
my $private_key = $rsa->get_private_key_string();
my $public_key  = $rsa->get_public_key_string();
open my $fh, '>', $id_file or die "couldn't open $id_file: $!";
print {$fh} <<"EOF";
#!/usr/bin/perl
# ----------------------------------------------------------------------
# \$Id\$
# ----------------------------------------------------------------------

use strict;
use warnings;
use Tachikoma;

my \$config = Tachikoma->configuration;

# Set our ID
\$config->id('$id');

# Set your unencrypted private key here
\$config->private_key( q($private_key) );

\$config->public_keys->{ \$config->id } = {
    allow => {map {\$_=>1} qw(
        command
        client
        server
    )},
    # allow_commands => {map {\$_=>1} qw(
    #     connect_node
    # )},
    public_key =>
q($public_key)};

1;
EOF
close $fh or die "couldn't close $id_file: $!";

print $public_key;
