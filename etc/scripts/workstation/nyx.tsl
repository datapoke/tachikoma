v2
include services/config.tsl

make_node CommandInterpreter hosts
make_node JobController      jobs
command jobs start_job Tail  local_server_log /var/log/tachikoma/tachikoma-server.log
make_node Ruleset            server_log:ruleset
make_node Tee                server_log:tee
make_node Tee                server_log
make_node Tee                error_log:tee
make_node Tee                error_log
make_node Ruleset            local_system_log:ruleset
make_node Ruleset            system_log:ruleset
make_node Tee                system_log:tee
make_node Tee                system_log
make_node Tee                silc_dn:tee
make_node Null               null
make_node Echo               echo
make_node Scheduler          scheduler

cd server_log:ruleset:config
  add  100 deny where payload=.* FROM: .* ID: "tachikoma@<hostname>(?:\.?.*)" COMMAND: .*
  add  200 deny where payload=silo .* pub .* user .* addr .* is rfc1918
  add  999 copy to error_log:tee where payload="ERROR:|FAILED:|TRAP:|COMMAND:"
  add 1000 redirect to server_log:tee
cd ..

cd local_system_log:ruleset:config
  add 100 allow where payload=sudo
  add 1000 deny
cd ..

cd system_log:ruleset:config
  add 200  deny where payload=ipmi0: KCS
  add 1000 redirect to system_log:tee
cd ..

command jobs start_job Transform server_log:color '/usr/local/etc/tachikoma/LogColor.conf' 'Log::Color::filter(@_)'
command jobs start_job Transform error_log:color  '/usr/local/etc/tachikoma/LogColor.conf' 'Log::Color::filter(@_)'
command jobs start_job Transform system_log:color '/usr/local/etc/tachikoma/LogColor.conf' 'Log::Color::filter(@_)'
command jobs start_job Tail      http_log         /var/log/tachikoma/http-access.log

connect_node system_log:color         system_log
connect_node system_log:tee           system_log:color
connect_node local_system_log:ruleset system_log:ruleset
connect_node error_log:color          error_log
connect_node error_log:tee            error_log:color
connect_node server_log:color         server_log
connect_node server_log:tee           server_log:color
connect_node local_server_log         server_log:ruleset
connect_node http_log                 null


func run_benchmarks {
    command jobs start_job CommandInterpreter benchmarks;

    cd benchmarks;
      listen_inet       127.0.0.1:5000;
      listen_inet       127.0.0.1:5001;
      listen_inet       127.0.0.1:5002;
      listen_inet --io  127.0.0.1:6000;
      listen_inet --io  127.0.0.1:6001;
      listen_inet --io  127.0.0.1:6002;
      make_node Null null;
      connect_edge 127.0.0.1:5000 null;
      connect_edge 127.0.0.1:6000 null;

      on 127.0.0.1:5001 authenticated {
          make_node Null <1>:timer 0 512 100;
          connect_sink <1>:timer <1>;
      };
      on 127.0.0.1:5001 EOF rm <1>:timer;

      on 127.0.0.1:5002 authenticated {
          make_node Null <1>:timer 0 16 65000;
          connect_sink <1>:timer <1>;
      };
      on 127.0.0.1:5002 EOF rm <1>:timer;

      on 127.0.0.1:6001 connected {
          make_node Null <1>:timer 0 512 100;
          connect_sink <1>:timer <1>;
      };
      on 127.0.0.1:6001 EOF rm <1>:timer;

      on 127.0.0.1:6002 connected {
          make_node Null <1>:timer 0 16 65000;
          connect_sink <1>:timer <1>;
      };
      on 127.0.0.1:6002 EOF rm <1>:timer;
      insecure;
    cd ..;
}

func run_benchmarks_profiled {
    local time = <1>;
    env NYTPROF=addpid=1:file=/tmp/nytprof.out;
    env PERL5OPT=-d:NYTProf;
    run_benchmarks;
    if (<time>) {
        command scheduler in <time> command jobs stop_job benchmarks;
    };
    env NYTPROF=;
    env PERL5OPT=;
}



# partitions
command jobs start_job CommandInterpreter partitions
cd partitions
  make_node Partition scratch:log     --filename=/logs/scratch.log         \
                                      --segment_size=(32 * 1024 * 1024)
  make_node Partition follower:log    --filename=/logs/follower.log        \
                                      --segment_size=(32 * 1024 * 1024)    \
                                      --leader=scratch:log
  make_node Partition offset:log      --filename=/logs/offset.log          \
                                      --segment_size=(256 * 1024)
  make_node Consumer scratch:consumer --partition=scratch:log              \
                                      --offsetlog=offset:log
  insecure
cd ..



# services
var services = "<home>/.tachikoma/services";

command jobs  run_job Shell <services>/hubs.tsl
command hosts connect_inet localhost:<tachikoma.hubs.port>      hubs:service

command jobs  run_job Shell <services>/indexers.tsl
command hosts connect_inet localhost:<tachikoma.indexers.port>  indexers:service

command jobs  run_job Shell <services>/tables.tsl
command hosts connect_inet localhost:<tachikoma.tables.port>    tables:service

command jobs  run_job Shell <services>/engines.tsl
command hosts connect_inet localhost:<tachikoma.engines.port>   engines:service

command jobs  run_job Shell <services>/lookup.tsl
command hosts connect_inet localhost:<tachikoma.lookup.port>    lookup:service

command jobs  run_job Shell <services>/topic_top.tsl
command hosts connect_inet localhost:<tachikoma.topic_top.port> topic_top:service

command jobs  run_job Shell <services>/http.tsl
command hosts connect_inet localhost:<tachikoma.http.port>      http:service



# ingest server logs
connect_node server_log:tee indexers:service/server_log

var username=`whoami`;

# sound effects
func get_sound   { return "/System/Library/Sounds/<1>.aiff\n" }
func afplay      { send AfPlay:sieve <1>; return }
func cozmo_alert { send CozmoAlert:sieve <1>; return }

make_node MemorySieve AfPlay:sieve     1
make_node JobFarmer   AfPlay           4 AfPlay
make_node MemorySieve CozmoAlert:sieve 1
make_node JobFarmer   CozmoAlert       1 CozmoAlert
make_node Function server_log:sounds '{
    local sound = "";
    # if (<1> =~ "\sWARNING:\s")    [ sound = Tink;                    ]
    if (<1> =~ "\sERROR:\s(.*)")  [ sound = Tink;   cozmo_alert <_1> ]
    elsif (<1> =~ "\sFAILURE:\s") [ sound = Sosumi;                  ]
    elsif (<1> =~ "\sCOMMAND:\s") [ sound = Hero;                    ];
    if (<sound>) { afplay { get_sound <sound> } };
}'
make_node Function silc:sounds '{
    local sound = Pop;
    if (<1> =~ "\b<username>\b(?!>)") [ sound = Glass ];
    afplay { get_sound <sound> };
}'
command AfPlay     lazy on
command CozmoAlert lazy on
connect_node CozmoAlert       null
connect_node CozmoAlert:sieve CozmoAlert:load_balancer
connect_node AfPlay           null
connect_node AfPlay:sieve     AfPlay:load_balancer
connect_node server_log:tee   server_log:sounds
connect_node silc_dn:tee      silc:sounds

cd hosts
  connect_inet --scheme=rsa-sha256 --use-ssl tachikoma:4231
  connect_inet --scheme=rsa-sha256 --use-ssl tachikoma:4232 server_logs
  connect_inet --scheme=rsa-sha256 --use-ssl tachikoma:4233 system_logs
  connect_inet --scheme=rsa-sha256 --use-ssl tachikoma:4234 silc_dn
cd ..

connect_node silc_dn     silc_dn:tee
connect_node system_logs system_log:ruleset
connect_node server_logs server_log:ruleset

command jobs start_job Tail local_system_log /var/log/system.log
connect_node local_system_log local_system_log:ruleset



#######################################################################
# fsync source
#######################################################################

command jobs start_job CommandInterpreter fsync:source
cd fsync:source
  make_node JobController      jobs
  make_node CommandInterpreter hosts
  make_node Responder          DirStats:cap
  make_node Tee                DirStats:tee
  make_node ClientConnector    DirStats:client_connector DirStats:tee
  make_node Responder          FileSender:cap


  # listen ports for incoming connections
  listen_inet --scheme=rsa --use-ssl 0.0.0.0:5600
  listen_inet --scheme=rsa         127.0.0.1:5601
  listen_inet --scheme=rsa --use-ssl 0.0.0.0:5602
  register 0.0.0.0:5602 DirStats:client_connector authenticated

  secure 2
cd ..



#######################################################################
# fsync destination
#######################################################################

command jobs start_job CommandInterpreter fsync:destination
cd fsync:destination
  make_node JobController      jobs
  make_node CommandInterpreter hosts
  make_node Null               null
  make_node JobFarmer          DirCheck 4 DirCheck <home>/Documents 60 validate

  # misa
  command hosts connect_inet --scheme=rsa --use-ssl --owner=DirCheck --host=misa --port=5602 --name=dirstats1
  secure 3
cd ..



#######################################################################
# fsync2 source
#######################################################################

command jobs start_job CommandInterpreter fsync2:source
cd fsync2:source
  make_node JobController      jobs
  make_node CommandInterpreter hosts
  make_node Buffer             file:buffer         fsync2.db 256
  make_node Watchdog           file:watchdog       file:gate
  make_node Gate               file:gate
  make_node AgeSieve           file:sieve          120
  make_node FileController     FileController
  make_node LoadBalancer       FileSender:load_balancer
  make_node Tee                output:tee
  make_node Scheduler          scheduler
  make_node Watchdog           DirStats:watchdog   DirStats:gate
  make_node Gate               DirStats:gate
  make_node SetStream          DirStats:set_stream
  make_node Buffer             DirStats:buffer
  make_node AgeSieve           DirStats:sieve      30
  make_node JobFarmer          DirStats            4 DirStats  /Volumes/Data localhost:5701 256 1
  make_node Responder          DirStats:cap
  make_node Tee                DirStats:tee
  make_node ClientConnector    DirStats:client_connector DirStats:tee
  make_node Responder          FileSender:cap
  command DirStats:buffer set_count 4
  command jobs start_job CommandInterpreter fsync2:bridge1
  cd fsync2:bridge1
    make_node FileSender      FileSender            /Volumes/Data FileSender:tee
    make_node Tee             FileSender:tee
    make_node ClientConnector FileSender:client_connector FileSender:tee
    connect_sink FileSender:tee FileSender # force responses through
    connect_node FileSender     _parent/FileSender:cap
    listen_inet --scheme=rsa --use-ssl 0.0.0.0:5711
    register 0.0.0.0:5711 FileSender:client_connector authenticated
    secure 3
  cd ..
  command jobs start_job CommandInterpreter fsync2:bridge2
  cd fsync2:bridge2
    make_node FileSender      FileSender            /Volumes/Data FileSender:tee
    make_node Tee             FileSender:tee
    make_node ClientConnector FileSender:client_connector FileSender:tee
    connect_sink FileSender:tee FileSender # force responses through
    connect_node FileSender     _parent/FileSender:cap
    listen_inet --scheme=rsa --use-ssl 0.0.0.0:5721
    register 0.0.0.0:5721 FileSender:client_connector authenticated
    secure 3
  cd ..
  command jobs start_job CommandInterpreter fsync2:bridge3
  cd fsync2:bridge3
    make_node FileSender      FileSender            /Volumes/Data FileSender:tee
    make_node Tee             FileSender:tee
    make_node ClientConnector FileSender:client_connector FileSender:tee
    connect_sink FileSender:tee FileSender # force responses through
    connect_node FileSender     _parent/FileSender:cap
    listen_inet --scheme=rsa --use-ssl 0.0.0.0:5731
    register 0.0.0.0:5731 FileSender:client_connector authenticated
    secure 3
  cd ..
  command jobs start_job CommandInterpreter fsync2:bridge4
  cd fsync2:bridge4
    make_node FileSender      FileSender            /Volumes/Data FileSender:tee
    make_node Tee             FileSender:tee
    make_node ClientConnector FileSender:client_connector FileSender:tee
    connect_sink FileSender:tee FileSender # force responses through
    connect_node FileSender     _parent/FileSender:cap
    listen_inet --scheme=rsa --use-ssl 0.0.0.0:5741
    register 0.0.0.0:5741 FileSender:client_connector authenticated
    secure 3
  cd ..


  connect_node FileSender:load_balancer      fsync2:bridge1/FileSender
  connect_node FileSender:load_balancer      fsync2:bridge2/FileSender
  connect_node FileSender:load_balancer      fsync2:bridge3/FileSender
  connect_node FileSender:load_balancer      fsync2:bridge4/FileSender
  connect_node FileSender:cap                output:tee
  connect_node DirStats                      DirStats:cap
  connect_node DirStats:sieve                DirStats
  connect_node DirStats:buffer               DirStats:sieve
  connect_node DirStats:set_stream           DirStats:buffer
  connect_node DirStats:gate                 DirStats:set_stream
  connect_node FileController                FileSender:load_balancer
  connect_node file:sieve                    FileController
  connect_node file:gate                     file:sieve
  connect_node file:buffer                   file:gate


  # send dirstats


  # heartbeat
  make_node Timer           heartbeat 5000
  make_node Tee             heartbeat:tee
  make_node ClientConnector heartbeat:client_connector heartbeat:tee
  connect_node heartbeat heartbeat:tee
  listen_inet --scheme=rsa --use-ssl 0.0.0.0:5799
  register 0.0.0.0:5799 heartbeat:client_connector authenticated


  # listen ports for incoming connections
  listen_inet --scheme=rsa --use-ssl 0.0.0.0:5700
  listen_inet --scheme=rsa         127.0.0.1:5701
  listen_inet --scheme=rsa --use-ssl 0.0.0.0:5702
  register 0.0.0.0:5702 DirStats:client_connector authenticated


  # buffer probe
  command hosts connect_inet --scheme=rsa --host=localhost --port=4391 --name=buffer_top
  command hosts make_node MemorySieve buffer_top:sieve 4 should_warn
  make_node BufferProbe buffer_probe 4
  connect_node buffer_top:sieve buffer_top
  connect_node buffer_probe     buffer_top:sieve
  secure 2
cd ..



#######################################################################
# fsync2 destination
#######################################################################

command jobs start_job CommandInterpreter fsync2:destination
cd fsync2:destination
  make_node JobController      jobs
  make_node CommandInterpreter hosts
  make_node Null               null
  make_node JobFarmer          DirCheck 4 DirCheck /Volumes/Data2 60
  command jobs start_job CommandInterpreter fsync2:destination1 \
    make_node FileReceiver FileReceiver /Volumes/Data2
  command jobs start_job CommandInterpreter fsync2:destination2 \
    make_node FileReceiver FileReceiver /Volumes/Data2
  command jobs start_job CommandInterpreter fsync2:destination3 \
    make_node FileReceiver FileReceiver /Volumes/Data2
  command jobs start_job CommandInterpreter fsync2:destination4 \
    make_node FileReceiver FileReceiver /Volumes/Data2

  # localhost
  command fsync2:destination1 connect_inet --scheme=rsa --use-ssl --owner=FileReceiver --host=localhost --port=5711
  command fsync2:destination2 connect_inet --scheme=rsa --use-ssl --owner=FileReceiver --host=localhost --port=5721
  command fsync2:destination3 connect_inet --scheme=rsa --use-ssl --owner=FileReceiver --host=localhost --port=5731
  command fsync2:destination4 connect_inet --scheme=rsa --use-ssl --owner=FileReceiver --host=localhost --port=5741
  command hosts connect_inet --scheme=rsa --use-ssl --owner=DirCheck --host=localhost --port=5702 --name=dirstats1
  command fsync2:destination1 secure 3
  command fsync2:destination2 secure 3
  command fsync2:destination3 secure 3
  command fsync2:destination4 secure 3
  secure 3
cd ..

insecure
