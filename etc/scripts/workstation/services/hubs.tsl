#!/usr/bin/env /usr/local/bin/tachikoma
var stick;
if (<_C> > 0) {
    stick = <1>;
}
var name = hubs
include services/daemonize.tsl

var num_hubs = ( <tachikoma.hubs.count> || 4 );
var all_hubs
for h (<hostname>) {
    for i ( 1 .. <num_hubs> ) {
        local j = <root_port> + <i>;
        var "topics_dir.<h>:<j>" = <topics_dir1>;
        all_hubs .= "<h>:<j>";
        if ( <topics_dir2> ) {
            j = <root_port> + <i> + <num_hubs>;
            var "topics_dir.<h>:<j>" = <topics_dir2>;
            all_hubs .= "<h>:<j>";
        };
    };
}

func add_hub {
    local broker_id = <1>;
    local path      = [var "topics_dir.<broker_id>"];
    command jobs start_job CommandInterpreter hub:<broker_id>;
    cd hub:<broker_id>;
        make_node Broker broker <broker_id> <path> <stick>;
        cd broker;
            for hub (<all_hubs>) {
                set_broker <hub> [var "topics_dir.<hub>"];
            };

            set_topic topic1;
            set_group cache                --topic=topic1;
            set_group IDs                  --topic=topic1;

            set_topic topic1.ID            --segment_size=(16 * 1024 * 1024);
            set_group IDs                  --topic=topic1.ID;

            set_topic topic2;
            set_group cache                --topic=topic2;

            set_topic tasks                --segment_size=(1024 * 1024)
                                           --max_lifespan=(7 * 86400);
            set_group cache                --topic=tasks;
            set_group IDs                  --topic=tasks;

            set_topic tasks.ID             --num_partitions=4
                                           --segment_size=(1024 * 1024)
                                           --max_lifespan=(7 * 86400);
            set_group IDs                  --topic=tasks.ID;
            set_group engine               --topic=tasks.ID;

            set_topic server_log           --num_partitions=4
                                           --segment_size=(64 * 1024 * 1024)
                                           --max_lifespan=86400;
            for field (<server_log.fields>) {
                set_topic server_log.<field> --num_partitions=4
                                             --segment_size=(4 * 1024 * 1024)
                                             --max_lifespan=(7 * 86400);
                set_group server_log.<field> --topic=server_log;
                set_group engine             --topic=server_log.<field>;
            };

            set_topic images.indb    --num_partitions=8
                                     --segment_size=(128 * 1024 * 1024)
                                     --max_lifespan=(2 * 86400);
            set_topic images.ondisk  --num_partitions=8
                                     --segment_size=(128 * 1024 * 1024)
                                     --max_lifespan=(2 * 86400);
            set_topic images.orphans --num_partitions=8
                                     --segment_size=(128 * 1024 * 1024)
                                     --max_lifespan=86400;

            start_broker;
        cd ..;
        topic_probe;
        listen_inet <broker_id>;
        # if ( <broker_id> =~ ":(\d+)$" ) {
        #     listen_inet localhost:<_1>;
        # };
        secure 3;
    cd ..;
}

for i ( 1 .. <num_hubs> ) {
    local j = <root_port> + <i>;
    add_hub "<hostname>:<j>";
    if ( <topics_dir2> ) {
        j = <root_port> + <i> + <num_hubs>;
        add_hub "<hostname>:<j>";
    };
}

listen_inet localhost:<root_port>
insecure
