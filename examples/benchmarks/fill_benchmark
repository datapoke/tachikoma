#!/usr/bin/env perl
use strict;
use warnings;
use Tachikoma;
use Tachikoma::Message qw( TM_BYTESTREAM TM_EOF );
use Time::HiRes qw( time );

my $home = ( getpwuid $< )[7];
Tachikoma->configuration->load_config_file(
    "$home/.tachikoma/etc/tachikoma.conf",
    '/usr/local/etc/tachikoma.conf',
);

my $to         = shift @ARGV // '';
my $batch_size = shift @ARGV // 16;
# my $buf_size   = ( shift @ARGV // 65516 ) - length $to;
my $buf_size   = ( shift @ARGV // 65000 ) - length $to;
my $tachikoma  = Tachikoma->inet_client( 'localhost', $to ? 4230 : 5000 );
my $buf        = "\0" x $buf_size;
my $sent       = 0;
my $count      = 0;
my $then       = time;
my $delay      = shift(@ARGV) || 2;
my $message    = Tachikoma::Message->new;
$message->type(TM_BYTESTREAM);
$message->to($to);
$message->payload($buf);
my $packed = ${ $message->packed } x $batch_size;
my $size   = length $packed;
my $fh     = $tachikoma->fh;
my $total  = 10000;

print "size: $size\n";

while (1) {
    my $wrote = 0;
    while ( $wrote < $size ) {
        my $rv = syswrite $fh, $packed, $size - $wrote, $wrote;
        last if ( $rv < 1 );
        $wrote += $rv;
    }
    if ( $sent++ >= $total ) {
        my $span = time - $then;
        $count  += $sent;
        if ( $span >= $delay ) {
            printf
                "%.2f MB per second - %.2f messages per second\n",
                $count * $size / 1024 / 1024 / $span,
                ( $count * $batch_size ) / $span;
            $count = 0;
            $then  = time;
        }
        $sent = 0;
    }
}
