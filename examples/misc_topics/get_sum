#!/usr/bin/env perl
use strict;
use warnings;
use Tachikoma::Nodes::ConsumerBroker;

my $home = ( getpwuid $< )[7];
Tachikoma->configuration->load_config_file(
    "$home/.tachikoma/etc/tachikoma.conf",
    '/usr/local/etc/tachikoma.conf',
);

my $topic    = $ARGV[0] or die "usage: get_sum <topic> [ <group> ]\n";
my $group    = $ARGV[1] // "sum";
my $consumer = Tachikoma::Nodes::ConsumerBroker->new( $topic, $group );
while (1) {
    my $group_cache = undef;
    eval { $group_cache = $consumer->get_group_cache };
    if (@_) {
        print STDERR $consumer->sync_error;
        sleep 1;
        next;
    }
    my $total = 0;
    my $min   = undef;
    my $max   = 0;
    my $sum   = 0;
    my $time  = time;
    printf "%d %-20s %10s %7s %7s %7s %13s\n",
        $time, 'PARTITION', 'COUNT', 'MIN', 'AVG', 'MAX', 'SUM';
    for my $id ( sort keys %$group_cache ) {
        my $cache = $group_cache->{$id};
        if ( $cache and ref($cache) and defined $cache->{sum} ) {
            printf(
                "%d %-20s %10d %7d %7d %7d %13d\n",
                $time,
                $id,
                $cache->{count},
                $cache->{min} // 0,
                $cache->{count} ? $cache->{sum} / $cache->{count} : 0,
                $cache->{max},
                $cache->{sum}
            );
            next if ( not $cache->{count} );
            $total += $cache->{count};
            $min //= $cache->{min};
            $min = $cache->{min} if ( $cache->{min} < $min );
            $max = $cache->{max} if ( $cache->{max} > $max );
            $sum += $cache->{sum};
        }
    }
    printf "%d %-20s %10d %7d %7d %7d %13d\n", $time, 'TOTAL',
        $total, $min // 0, $total ? $sum / $total : 0, $max, $sum;
    sleep( $ARGV[2] // 5 );
    print "\n";
}
